import os
import asyncio
import requests
from telegram import InlineKeyboardMarkup, InlineKeyboardButton, Update
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
from db import migrate
from config import BOT_TOKEN

# ---------------------- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Render ----------------------
PORT = int(os.environ.get("PORT", 10000))
BOT_URL = os.environ.get("BOT_URL")  # –ü—Ä–∏–º–µ—Ä: https://bs-donate-bot.onrender.com
WEBHOOK_PATH = f"/{BOT_TOKEN}"
WEBHOOK_URL = f"{BOT_URL}{WEBHOOK_PATH}"

# ---------------------- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ ----------------------
def main_menu_kb():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üõí –ö–∞—Ç–∞–ª–æ–≥", callback_data="catalog")],
        [InlineKeyboardButton("üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data="my_orders")],
        [InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help")]
    ])

# ---------------------- –•–µ–Ω–¥–ª–µ—Ä—ã ----------------------
async def start_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –¥–æ–Ω–∞—Ç-–±–æ—Ç –¥–ª—è Brawl Stars!", reply_markup=main_menu_kb())

async def help_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –ù–∞–ø–∏—à–∏ —Å—é–¥–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å. –ê–¥–º–∏–Ω —É–≤–∏–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n"
        "–¢–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –º–µ–Ω—é.",
        reply_markup=main_menu_kb()
    )

async def handle_payment_proof(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ß–µ–∫ –ø–æ–ª—É—á–µ–Ω. –ê–¥–º–∏–Ω –ø—Ä–æ–≤–µ—Ä–∏—Ç –æ–ø–ª–∞—Ç—É.")

# ---------------------- –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ----------------------
def main():
    # üõ† –∑–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    loop.run_until_complete(migrate())

    app = Application.builder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start_cmd))
    app.add_handler(CommandHandler("help", help_cmd))
    app.add_handler(MessageHandler(filters.PHOTO | filters.Document.ALL, handle_payment_proof))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω ‚úÖ")

    # üõ† –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL –∂–∏–≤–æ–π
    try:
        r = requests.get(BOT_URL)
        print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ URL: {r.status_code}")
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å URL: {e}")

    # üõ† –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±—Ö—É–∫ (–±–µ–∑ asyncio.run ‚Äî —Ç–µ–ø–µ—Ä—å –±–µ–∑–æ–ø–∞—Å–Ω–æ)
    app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        webhook_url=WEBHOOK_URL
    )

if __name__ == "__main__":
    main()
